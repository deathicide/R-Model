lacyPosAtoms[c(tmdDomainNum$start[5]:tmdDomainNum$end[5]),3])
lacyTMD6 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[6]:tmdDomainNum$end[6]),1],
lacyPosAtoms[c(tmdDomainNum$start[6]:tmdDomainNum$end[6]),2],
lacyPosAtoms[c(tmdDomainNum$start[6]:tmdDomainNum$end[6]),3])
lacyTMD7 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[7]:tmdDomainNum$end[7]),1],
lacyPosAtoms[c(tmdDomainNum$start[7]:tmdDomainNum$end[7]),2],
lacyPosAtoms[c(tmdDomainNum$start[7]:tmdDomainNum$end[7]),3])
lacyTMD8 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[8]:tmdDomainNum$end[8]),1],
lacyPosAtoms[c(tmdDomainNum$start[8]:tmdDomainNum$end[8]),2],
lacyPosAtoms[c(tmdDomainNum$start[8]:tmdDomainNum$end[8]),3])
lacyTMD9 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[9]:tmdDomainNum$end[9]),1],
lacyPosAtoms[c(tmdDomainNum$start[9]:tmdDomainNum$end[9]),2],
lacyPosAtoms[c(tmdDomainNum$start[9]:tmdDomainNum$end[9]),3])
lacyTMD10 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[10]:tmdDomainNum$end[10]),1],
lacyPosAtoms[c(tmdDomainNum$start[10]:tmdDomainNum$end[10]),2],
lacyPosAtoms[c(tmdDomainNum$start[10]:tmdDomainNum$end[10]),3])
lacyTMD11 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[11]:tmdDomainNum$end[11]),1],
lacyPosAtoms[c(tmdDomainNum$start[11]:tmdDomainNum$end[11]),2],
lacyPosAtoms[c(tmdDomainNum$start[11]:tmdDomainNum$end[11]),3])
lacyTMD12 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[12]:tmdDomainNum$end[12]),1],
lacyPosAtoms[c(tmdDomainNum$start[12]:tmdDomainNum$end[12]),2],
lacyPosAtoms[c(tmdDomainNum$start[12]:tmdDomainNum$end[12]),3])
}
#make a fit line for all tmds
{
TMD1endpts <-fitLine(lacyTMD1)
TMD2endpts <-fitLine(lacyTMD2)
TMD3endpts <-fitLine(lacyTMD3)
TMD4endpts <-fitLine(lacyTMD4)
TMD5endpts <-fitLine(lacyTMD5)
TMD6endpts <-fitLine(lacyTMD6)
TMD7endpts <-fitLine(lacyTMD7)
TMD8endpts <-fitLine(lacyTMD8)
TMD9endpts <-fitLine(lacyTMD9)
TMD10endpts <-fitLine(lacyTMD10)
TMD11endpts <-fitLine(lacyTMD11)
TMD12endpts <-fitLine(lacyTMD12)
}
reorientTMDendpts <- function(tmdendpts,tmdNum,domainData,totalData){
#define a tolerance for fuzzy searching of begining and end points
tol <- (normVec(tmdendpts[2,]) + normVec(tmdendpts[1,]))/2
#get the start atom position of the tmd
first <- cbind(totalData$x[domainData$start[tmdNum]],totalData$y[domainData$start[tmdNum]],
totalData$z[domainData$start[tmdNum]])
#check to see if the norm of the first row of the tmd is "close" to the
#norm of the first row of the tmdendpts vector
#switch the rows of the tmdendpts if outside the tolerance
if(!((normVec(first) + tol) > normVec(tmdendpts[1,]) && (normVec(first) - tol) < normVec(tmdendpts[1,])))
{
temp <- tmdendpts[1,]
tmdendpts[1,] <- tmdendpts[2,]
tmdendpts[2,] <- temp
}
return(tmdendpts)
}
i <- 1
sink("/dev/null")
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
sink()
for(i in 1:12){
sink("/dev/null")
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
sink()
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
}
fix(reorientTMDendpts)
for(i in 1:12){
invisible(
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
)
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
}
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
}
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
sink("test.txt")
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
}
sink()
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
write.table(
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2),
file = "test.txt",sep=",",row.names=FALSE,col.names=FALSE)
)
}
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
write.table(
(normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2),
file = "test.txt",sep=",",row.names=FALSE,col.names=FALSE
)
}
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
arrgh[i] <- (normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
}
arrgh <- vector(length = 12)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
arrgh[i] <- (normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2)
}
fix(arrgh)
fix(arrgh)
arrgh <- vector(length = 12)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
fix(arrgh)
numbers <- matrix(nrow = 12,ncol=2)
View(numbers)
arrgh <- vector(length = 12)
numbers <- matrix(nrow = 12,ncol=2)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[1,i] <- (normVec(testFirst) + testtol)
numbers[2,i] <- (normVec(testFirst) - testtol)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
View(numbers)
numbers <- matrix(1:24,nrow = 12,ncol=2)
View(numbers)
numbers[1,1]
numbers[1,2]
fix(arrgh)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
View(numbers)
arrgh <- vector(length = 12)
numbers <- matrix(1:24,nrow = 12,ncol=2)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (placeH2 - placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
fix(arrgh)
fix(placeH1)
testtol <- (placeH2 - placeH1)/2
fix(testtol)
arrgh <- vector(length = 12)
numbers <- matrix(1:24,nrow = 12,ncol=2)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (normVec(placeH2) - normVec(placeH1)/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
arrgh <- vector(length = 12)
numbers <- matrix(1:24,nrow = 12,ncol=2)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (normVec(placeH2) - normVec(placeH1))/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
View(numbers)
fix(arrgh)
arrgh <- vector(length = 12)
numbers <- matrix(nrow = 12,ncol=3)
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (normVec(placeH2) - normVec(placeH1))/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
numbers[i,3] <- normVec(placeH1)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
View(numbers)
fix(arrgh)
arrgh <- vector(length = 12)
numbers <- matrix(nrow = 12,ncol=3,dimnames=list(c("+tol","-tol","test")))
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (normVec(placeH2) - normVec(placeH1))/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
numbers[i,3] <- normVec(placeH1)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
View(numbers)
arrgh <- vector(length = 12)
numbers <- matrix(nrow = 12,ncol=3,dimnames=list(c(1:12),c("+tol","-tol","test")))
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (normVec(placeH2) - normVec(placeH1))/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
numbers[i,3] <- normVec(placeH1)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH2))
}
View(numbers)
View(TMD2endpts)
normVec(TMD1endpts[1,])
normVec(TMD1endpts[2,])
cbind(lacyAtoms$x[tmdDomainNum$start[2]],lacyAtoms$y[tmdDomainNum$start[2]],lacyAtoms$z[tmdDomainNum$start[2]])
normVec(cbind(lacyAtoms$x[tmdDomainNum$start[2]],lacyAtoms$y[tmdDomainNum$start[2]],lacyAtoms$z[tmdDomainNum$start[2]]))
cbind(
normVec(TMD1endpts[1,]),
normVec(TMD1endpts[2,]),
normVec(TMD2endpts[1,]),
normVec(TMD2endpts[2,]),
normVec(TMD3endpts[1,]),
normVec(TMD3endpts[2,]),
normVec(TMD4endpts[1,]),
normVec(TMD4endpts[2,]),
normVec(TMD5endpts[1,]),
normVec(TMD5endpts[2,]),
normVec(TMD6endpts[1,]),
normVec(TMD6endpts[2,]),
normVec(TMD7endpts[1,]),
normVec(TMD7endpts[2,]),
normVec(TMD8endpts[1,]),
normVec(TMD8endpts[2,]),
normVec(TMD9endpts[1,]),
normVec(TMD9endpts[2,]),
normVec(TMD10endpts[1,]),
normVec(TMD10endpts[2,]),
normVec(TMD11endpts[1,]),
normVec(TMD11endpts[2,]),
normVec(TMD12endpts[1,]),
normVec(TMD12endpts[2,])
)
normVec(TMD2endpts[1,])
#totalData is the entire set of data in a data frame
#domainData is the data frame containg the tmd, start, end data
reorientTMDendpts <- function(tmdendpts,tmdNum,domainData,totalData){
#define a tolerance for fuzzy searching of begining and end points
tol <- abs((normVec(tmdendpts[2,]) - normVec(tmdendpts[1,])))/2
#get the start atom position of the tmd
first <- cbind(totalData$x[domainData$start[tmdNum]],totalData$y[domainData$start[tmdNum]],
totalData$z[domainData$start[tmdNum]])
#check to see if the norm of the first row of the tmd is "close" to the
#norm of the first row of the tmdendpts vector
#switch the rows of the tmdendpts if outside the tolerance
if(!((normVec(first) + tol) > normVec(tmdendpts[1,]) && (normVec(first) - tol) < normVec(tmdendpts[1,])))
{
temp <- tmdendpts[1,]
tmdendpts[1,] <- tmdendpts[2,]
tmdendpts[2,] <- temp
}
return(tmdendpts)
}
cbind(
normVec(lacyPosAtoms[tmdDomainNum$start[1],]),
normVec(lacyPosAtoms[tmdDomainNum$end[1],]),
normVec(lacyPosAtoms[tmdDomainNum$start[2],]),
normVec(lacyPosAtoms[tmdDomainNum$end[2],]),
normVec(lacyPosAtoms[tmdDomainNum$start[3],]),
normVec(lacyPosAtoms[tmdDomainNum$end[3],]),
normVec(lacyPosAtoms[tmdDomainNum$start[4],]),
normVec(lacyPosAtoms[tmdDomainNum$end[4],]),
normVec(lacyPosAtoms[tmdDomainNum$start[5],]),
normVec(lacyPosAtoms[tmdDomainNum$end[5],]),
normVec(lacyPosAtoms[tmdDomainNum$start[6],]),
normVec(lacyPosAtoms[tmdDomainNum$end[6],]),
normVec(lacyPosAtoms[tmdDomainNum$start[7],]),
normVec(lacyPosAtoms[tmdDomainNum$end[7],]),
normVec(lacyPosAtoms[tmdDomainNum$start[8],]),
normVec(lacyPosAtoms[tmdDomainNum$end[8],]),
normVec(lacyPosAtoms[tmdDomainNum$start[9],]),
normVec(lacyPosAtoms[tmdDomainNum$end[9],]),
normVec(lacyPosAtoms[tmdDomainNum$start[10],]),
normVec(lacyPosAtoms[tmdDomainNum$end[10],]),
normVec(lacyPosAtoms[tmdDomainNum$start[11],]),
normVec(lacyPosAtoms[tmdDomainNum$end[11],]),
normVec(lacyPosAtoms[tmdDomainNum$start[12],]),
normVec(lacyPosAtoms[tmdDomainNum$end[12],])
)
cbind(
normVec(TMD1endpts[1,]),
normVec(TMD1endpts[2,]),
normVec(TMD2endpts[1,]),
normVec(TMD2endpts[2,]),
normVec(TMD3endpts[1,]),
normVec(TMD3endpts[2,]),
normVec(TMD4endpts[1,]),
normVec(TMD4endpts[2,]),
normVec(TMD5endpts[1,]),
normVec(TMD5endpts[2,]),
normVec(TMD6endpts[1,]),
normVec(TMD6endpts[2,]),
normVec(TMD7endpts[1,]),
normVec(TMD7endpts[2,]),
normVec(TMD8endpts[1,]),
normVec(TMD8endpts[2,]),
normVec(TMD9endpts[1,]),
normVec(TMD9endpts[2,]),
normVec(TMD10endpts[1,]),
normVec(TMD10endpts[2,]),
normVec(TMD11endpts[1,]),
normVec(TMD11endpts[2,]),
normVec(TMD12endpts[1,]),
normVec(TMD12endpts[2,])
)
arrgh <- vector(length = 12)
numbers <- matrix(nrow = 12,ncol=3,dimnames=list(c(1:12),c("+tol","-tol","test")))
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- (normVec(placeH2) - normVec(placeH1))/2
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
numbers[i,3] <- normVec(placeH1)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH1))
}
fix(arrgh)
View(numbers)
normVec(TMD2endpts[1,])
normVec(TMD2endpts[2,])
j <- 1:12
j
fix(j)
normVec(TMD2endpts[1,])
normVec(TMD2endpts[2,])
normVec(TMD2endpts[2,]) - normVec(TMD2endpts[1,])
abs((normVec(TMD2endpts[2,]) - normVec(TMD2endpts[1,]))/2)
arrgh <- vector(length = 12)
numbers <- matrix(nrow = 12,ncol=3,dimnames=list(c(1:12),c("+tol","-tol","test")))
for(i in 1:12){
placeH2 <- get(paste("TMD",i,"endpts",sep=""))[2,]
placeH1 <- get(paste("TMD",i,"endpts",sep = ""))[1,]
testtol <- abs((normVec(placeH2) - normVec(placeH1))/2)
testFirst <- cbind(lacyAtoms$x[tmdDomainNum$start[i]],lacyAtoms$y[tmdDomainNum$start[i]],lacyAtoms$z[tmdDomainNum$start[i]])
numbers[i,1] <- (normVec(testFirst) + testtol)
numbers[i,2] <- (normVec(testFirst) - testtol)
numbers[i,3] <- normVec(placeH1)
arrgh[i] <- !((normVec(testFirst) + testtol) > normVec(placeH1) && (normVec(testFirst) - testtol) < normVec(placeH1))
}
fix(arrgh)
fix(reorientTMDendpts)
function(tmdendpts,tmdNum,domainData,totalData){
#define a tolerance for fuzzy searching of begining and end points
tol <- abs((normVec(tmdendpts[2,]) - normVec(tmdendpts[1,]))/2)
#get the start atom position of the tmd
first <- cbind(totalData$x[domainData$start[tmdNum]],totalData$y[domainData$start[tmdNum]],
totalData$z[domainData$start[tmdNum]])
#check to see if the norm of the first row of the tmd is "close" to the
#norm of the first row of the tmdendpts vector
#switch the rows of the tmdendpts if outside the tolerance
if(!((normVec(first) + tol) > normVec(tmdendpts[1,]) && (normVec(first) - tol) < normVec(tmdendpts[1,])))
{
temp <- tmdendpts[1,]
tmdendpts[1,] <- tmdendpts[2,]
tmdendpts[2,] <- temp
}
return(tmdendpts)
}
TMDtest1 <- reorientTMDendpts(TMD1endpts,1,tmdDomainNum,lacyAtoms)
TMDtest2 <- reorientTMDendpts(TMD2endpts,2,tmdDomainNum,lacyAtoms)
TMDtest3 <- reorientTMDendpts(TMD3endpts,3,tmdDomainNum,lacyAtoms)
TMDtest4 <- reorientTMDendpts(TMD4endpts,4,tmdDomainNum,lacyAtoms)
TMDtest5 <- reorientTMDendpts(TMD5endpts,5,tmdDomainNum,lacyAtoms)
TMDtest6 <- reorientTMDendpts(TMD6endpts,6,tmdDomainNum,lacyAtoms)
TMDtest7 <- reorientTMDendpts(TMD7endpts,7,tmdDomainNum,lacyAtoms)
TMDtest8 <- reorientTMDendpts(TMD8endpts,8,tmdDomainNum,lacyAtoms)
TMDtest9 <- reorientTMDendpts(TMD9endpts,9,tmdDomainNum,lacyAtoms)
TMDtest10 <- reorientTMDendpts(TMD10endpts,10,tmdDomainNum,lacyAtoms)
TMDtest11 <- reorientTMDendpts(TMD11endpts,11,tmdDomainNum,lacyAtoms)
TMDtest12 <- reorientTMDendpts(TMD12endpts,12,tmdDomainNum,lacyAtoms)
cbind(
normVec(TMDtest1[1,]),
normVec(TMDtest1[2,]),
normVec(TMDtest2[1,]),
normVec(TMDtest2[2,]),
normVec(TMDtest3[1,]),
normVec(TMDtest3[2,]),
normVec(TMDtest4[1,]),
normVec(TMDtest4[2,]),
normVec(TMDtest5[1,]),
normVec(TMDtest5[2,]),
normVec(TMDtest6[1,]),
normVec(TMDtest6[2,]),
normVec(TMDtest7[1,]),
normVec(TMDtest7[2,]),
normVec(TMDtest8[1,]),
normVec(TMDtest8[2,]),
normVec(TMDtest9[1,]),
normVec(TMDtest9[2,]),
normVec(TMDtest10[1,]),
normVec(TMDtest10[2,]),
normVec(TMDtest11[1,]),
normVec(TMDtest11[2,]),
normVec(TMDtest12[1,]),
normVec(TMDtest12[2,])
)
fix(reorientTMDendpts)
restart
restart()
require(devtools)
require(rgl)
require(onion)
r3dDefaults$windowRect <- c(0,0, 1280, 756)
#rgl.snapshot(paste("pic",".png",sep=""))
#rgl.viewpoint(fov = 30,zoom = 0.9)
#load all my functions
setwd("~/Documents/School Work/Grad School/Spring 2013/Research/R models/")
source("transModel//R/transporterModel.r")
#read in the data from a file
lacyAtoms <- read.csv(file = "webProteinModel/LacYAtoms.csv",head = TRUE,sep=",")
tmdDomainNum <- read.csv(file = "webProteinModel/tmdDomains.csv",head = TRUE,sep=",")
Ntot <- nrow(lacyAtoms)
#put the x,y,and z position data columns into a new matrix
lacyPosAtoms <- (matrix(c(lacyAtoms$x, lacyAtoms$y, lacyAtoms$z),
nrow=Ntot,ncol=3,byrow=FALSE))
#now pick out a tmd
{
lacyTMD1 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[1]:tmdDomainNum$end[1]),1],
lacyPosAtoms[c(tmdDomainNum$start[1]:tmdDomainNum$end[1]),2],
lacyPosAtoms[c(tmdDomainNum$start[1]:tmdDomainNum$end[1]),3])
lacyTMD2 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[2]:tmdDomainNum$end[2]),1],
lacyPosAtoms[c(tmdDomainNum$start[2]:tmdDomainNum$end[2]),2],
lacyPosAtoms[c(tmdDomainNum$start[2]:tmdDomainNum$end[2]),3])
lacyTMD3 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[3]:tmdDomainNum$end[3]),1],
lacyPosAtoms[c(tmdDomainNum$start[3]:tmdDomainNum$end[3]),2],
lacyPosAtoms[c(tmdDomainNum$start[3]:tmdDomainNum$end[3]),3])
lacyTMD4 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[4]:tmdDomainNum$end[4]),1],
lacyPosAtoms[c(tmdDomainNum$start[4]:tmdDomainNum$end[4]),2],
lacyPosAtoms[c(tmdDomainNum$start[4]:tmdDomainNum$end[4]),3])
lacyTMD5 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[5]:tmdDomainNum$end[5]),1],
lacyPosAtoms[c(tmdDomainNum$start[5]:tmdDomainNum$end[5]),2],
lacyPosAtoms[c(tmdDomainNum$start[5]:tmdDomainNum$end[5]),3])
lacyTMD6 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[6]:tmdDomainNum$end[6]),1],
lacyPosAtoms[c(tmdDomainNum$start[6]:tmdDomainNum$end[6]),2],
lacyPosAtoms[c(tmdDomainNum$start[6]:tmdDomainNum$end[6]),3])
lacyTMD7 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[7]:tmdDomainNum$end[7]),1],
lacyPosAtoms[c(tmdDomainNum$start[7]:tmdDomainNum$end[7]),2],
lacyPosAtoms[c(tmdDomainNum$start[7]:tmdDomainNum$end[7]),3])
lacyTMD8 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[8]:tmdDomainNum$end[8]),1],
lacyPosAtoms[c(tmdDomainNum$start[8]:tmdDomainNum$end[8]),2],
lacyPosAtoms[c(tmdDomainNum$start[8]:tmdDomainNum$end[8]),3])
lacyTMD9 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[9]:tmdDomainNum$end[9]),1],
lacyPosAtoms[c(tmdDomainNum$start[9]:tmdDomainNum$end[9]),2],
lacyPosAtoms[c(tmdDomainNum$start[9]:tmdDomainNum$end[9]),3])
lacyTMD10 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[10]:tmdDomainNum$end[10]),1],
lacyPosAtoms[c(tmdDomainNum$start[10]:tmdDomainNum$end[10]),2],
lacyPosAtoms[c(tmdDomainNum$start[10]:tmdDomainNum$end[10]),3])
lacyTMD11 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[11]:tmdDomainNum$end[11]),1],
lacyPosAtoms[c(tmdDomainNum$start[11]:tmdDomainNum$end[11]),2],
lacyPosAtoms[c(tmdDomainNum$start[11]:tmdDomainNum$end[11]),3])
lacyTMD12 <- cbind(lacyPosAtoms[c(tmdDomainNum$start[12]:tmdDomainNum$end[12]),1],
lacyPosAtoms[c(tmdDomainNum$start[12]:tmdDomainNum$end[12]),2],
lacyPosAtoms[c(tmdDomainNum$start[12]:tmdDomainNum$end[12]),3])
}
