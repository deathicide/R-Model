#fit lines to the rotated data
{
TMD1Rotendpts <- fitLine(lacyTMD1Rot)
TMD2Rotendpts <- fitLine(lacyTMD2Rot)
TMD3Rotendpts <- fitLine(lacyTMD3Rot)
TMD4Rotendpts <- fitLine(lacyTMD4Rot)
TMD5Rotendpts <- fitLine(lacyTMD5Rot)
TMD6Rotendpts <- fitLine(lacyTMD6Rot)
TMD7Rotendpts <- fitLine(lacyTMD7Rot)
TMD8Rotendpts <- fitLine(lacyTMD8Rot)
TMD9Rotendpts <- fitLine(lacyTMD9Rot)
TMD10Rotendpts <- fitLine(lacyTMD10Rot)
TMD11Rotendpts <- fitLine(lacyTMD11Rot)
TMD12Rotendpts <- fitLine(lacyTMD12Rot)
}
#plot the rotated
{
plotTMD(lacyTMD1Rot,TMD1Rotendpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD2Rot,TMD2Rotendpts,lacyPosAtoms,F,"darkorange")
plotTMD(lacyTMD3Rot,TMD3Rotendpts,lacyPosAtoms,F,"red")
plotTMD(lacyTMD4Rot,TMD4Rotendpts,lacyPosAtoms,F,"yellow")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"green")
plotTMD(lacyTMD6Rot,TMD6Rotendpts,lacyPosAtoms,F,"violetred")
plotTMD(lacyTMD7Rot,TMD7Rotendpts,lacyPosAtoms,F,"skyblue")
plotTMD(lacyTMD8Rot,TMD8Rotendpts,lacyPosAtoms,F,"orange")
plotTMD(lacyTMD9Rot,TMD9Rotendpts,lacyPosAtoms,F,"indianred1")
plotTMD(lacyTMD10Rot,TMD10Rotendpts,lacyPosAtoms,F,"lightyellow")
plotTMD(lacyTMD11Rot,TMD11Rotendpts,lacyPosAtoms,F,"palegreen")
plotTMD(lacyTMD12Rot,TMD12Rotendpts,lacyPosAtoms,F,"palevioletred")
}
#reorder the endpts to stay consistient
{
TMD1endpts <- reorientTMDendpts(TMD1endpts,1,tmdDomainNum,lacyAtoms)
TMD2endpts <- reorientTMDendpts(TMD2endpts,2,tmdDomainNum,lacyAtoms)
TMD3endpts <- reorientTMDendpts(TMD3endpts,3,tmdDomainNum,lacyAtoms)
TMD4endpts <- reorientTMDendpts(TMD4endpts,4,tmdDomainNum,lacyAtoms)
TMD5endpts <- reorientTMDendpts(TMD5endpts,5,tmdDomainNum,lacyAtoms)
TMD6endpts <- reorientTMDendpts(TMD6endpts,6,tmdDomainNum,lacyAtoms)
TMD7endpts <- reorientTMDendpts(TMD7endpts,7,tmdDomainNum,lacyAtoms)
TMD8endpts <- reorientTMDendpts(TMD8endpts,8,tmdDomainNum,lacyAtoms)
TMD9endpts <- reorientTMDendpts(TMD9endpts,9,tmdDomainNum,lacyAtoms)
TMD10endpts <- reorientTMDendpts(TMD10endpts,10,tmdDomainNum,lacyAtoms)
TMD11endpts <- reorientTMDendpts(TMD11endpts,11,tmdDomainNum,lacyAtoms)
TMD12endpts <- reorientTMDendpts(TMD12endpts,12,tmdDomainNum,lacyAtoms)
}
#rotate each tmd
{
lacyTMD1Rot <- rotateFromTo(lacyTMD1,lacyTMD7)
lacyTMD2Rot <- rotateFromTo(lacyTMD2,lacyTMD8)
lacyTMD3Rot <- rotateFromTo(lacyTMD3,lacyTMD9)
lacyTMD4Rot <- rotateFromTo(lacyTMD4,lacyTMD10)
lacyTMD5Rot <- rotateFromTo(lacyTMD5,lacyTMD11)
lacyTMD6Rot <- rotateFromTo(lacyTMD6,lacyTMD12)
lacyTMD7Rot <- rotateFromTo(lacyTMD7,lacyTMD1)
lacyTMD8Rot <- rotateFromTo(lacyTMD8,lacyTMD2)
lacyTMD9Rot <- rotateFromTo(lacyTMD9,lacyTMD3)
lacyTMD10Rot <- rotateFromTo(lacyTMD10,lacyTMD4)
lacyTMD11Rot <- rotateFromTo(lacyTMD11,lacyTMD5)
lacyTMD12Rot <- rotateFromTo(lacyTMD12,lacyTMD6)
}
#fit lines to the rotated data
{
TMD1Rotendpts <- fitLine(lacyTMD1Rot)
TMD2Rotendpts <- fitLine(lacyTMD2Rot)
TMD3Rotendpts <- fitLine(lacyTMD3Rot)
TMD4Rotendpts <- fitLine(lacyTMD4Rot)
TMD5Rotendpts <- fitLine(lacyTMD5Rot)
TMD6Rotendpts <- fitLine(lacyTMD6Rot)
TMD7Rotendpts <- fitLine(lacyTMD7Rot)
TMD8Rotendpts <- fitLine(lacyTMD8Rot)
TMD9Rotendpts <- fitLine(lacyTMD9Rot)
TMD10Rotendpts <- fitLine(lacyTMD10Rot)
TMD11Rotendpts <- fitLine(lacyTMD11Rot)
TMD12Rotendpts <- fitLine(lacyTMD12Rot)
}
#plot the rotated
{
plotTMD(lacyTMD1Rot,TMD1Rotendpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD2Rot,TMD2Rotendpts,lacyPosAtoms,F,"darkorange")
plotTMD(lacyTMD3Rot,TMD3Rotendpts,lacyPosAtoms,F,"red")
plotTMD(lacyTMD4Rot,TMD4Rotendpts,lacyPosAtoms,F,"yellow")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"green")
plotTMD(lacyTMD6Rot,TMD6Rotendpts,lacyPosAtoms,F,"violetred")
plotTMD(lacyTMD7Rot,TMD7Rotendpts,lacyPosAtoms,F,"skyblue")
plotTMD(lacyTMD8Rot,TMD8Rotendpts,lacyPosAtoms,F,"orange")
plotTMD(lacyTMD9Rot,TMD9Rotendpts,lacyPosAtoms,F,"indianred1")
plotTMD(lacyTMD10Rot,TMD10Rotendpts,lacyPosAtoms,F,"lightyellow")
plotTMD(lacyTMD11Rot,TMD11Rotendpts,lacyPosAtoms,F,"palegreen")
plotTMD(lacyTMD12Rot,TMD12Rotendpts,lacyPosAtoms,F,"palevioletred")
}
plotTMD(lacyTMD5,TMD5endpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"blue","green")
View(lacyPosAtoms)
plotTMD(lacyTMD5,TMD5endpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"blue","green")
plotTMD(lacyTMD12,TMD12endpts,lacyPosAtoms,F,"orange")
plotTMD(lacyTMD12Rot,TMD12Rotendpts,lacyPosAtoms,F,"orange","black")
plotTMD(lacyTMD5,TMD5endpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"blue","green")
plotTMD(lacyTMD12,TMD11endpts,lacyPosAtoms,F,"orange")
plotTMD(lacyTMD12Rot,TMD11Rotendpts,lacyPosAtoms,F,"orange","black")
plotTMD(lacyTMD5,TMD5endpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"blue","green")
plotTMD(lacyTMD11,TMD11endpts,lacyPosAtoms,F,"orange")
plotTMD(lacyTMD11Rot,TMD11Rotendpts,lacyPosAtoms,F,"orange","black")
plotTMD(lacyTMD5,TMD5endpts,lacyPosAtoms,T,"blue")
plotTMD(lacyTMD5Rot,TMD5Rotendpts,lacyPosAtoms,F,"blue","green")
plotTMD(lacyTMD11,TMD11endpts,lacyPosAtoms,F,"orange")
plotTMD(lacyTMD11Rot,TMD11Rotendpts,lacyPosAtoms,F,"orange","black")
View(lacyTMD5)
View(lacyTMD11)
View(outputFit)
#rotated data
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendpts",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendpts",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
View(outputOrig)
View(outputFit)
View(TMD1Rotendpts)
#fix for endpts being rotated oppositely
#endpts is the non rotated 2x3 matrix of endpts
#rotEndpts is the 2x3 matrix of endpts from rotateFromTo function
#returns the rotEndpts corrected: based on first row of endpts - both inputs should have the same first row
fixendpts <- function(endpts,rotEndpts){
temp <- matrix(ncol=3,nrow=2)
if(normVec(endpts[1,]) != normVec(rotEndpts[1,])){
temp[1,] <- rotEndpts[2,]
temp[2,] <- rotEndpts[1,]
}
return(temp)
}
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
#flip the rotated endpts if needed
{
TMD1Rotendpts <- fixendpts(TMD1enpts,TMD1Rotendpts)
TMD2Rotendpts <- fixendpts(TMD2enpts,TMD2Rotendpts)
TMD3Rotendpts <- fixendpts(TMD3enpts,TMD3Rotendpts)
TMD4Rotendpts <- fixendpts(TMD4enpts,TMD4Rotendpts)
TMD5Rotendpts <- fixendpts(TMD5enpts,TMD5Rotendpts)
TMD6Rotendpts <- fixendpts(TMD6enpts,TMD6Rotendpts)
TMD7Rotendpts <- fixendpts(TMD7enpts,TMD7Rotendpts)
TMD8Rotendpts <- fixendpts(TMD8enpts,TMD8Rotendpts)
TMD9Rotendpts <- fixendpts(TMD9enpts,TMD9Rotendpts)
TMD10Rotendpts <- fixendpts(TMD10enpts,TMD10Rotendpts)
TMD11Rotendpts <- fixendpts(TMD11enpts,TMD11Rotendpts)
TMD12Rotendpts <- fixendpts(TMD12enpts,TMD12Rotendpts)
}
#flip the rotated endpts if needed
{
TMD1Rotendpts <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendpts <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendpts <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendpts <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendpts <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendpts <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendpts <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendpts <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendpts <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendpts <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendpts <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendpts <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
#rotated data
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendpts",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendpts",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
#fix for endpts being rotated oppositely
#endpts is the non rotated 2x3 matrix of endpts
#rotEndpts is the 2x3 matrix of endpts from rotateFromTo function
#returns the rotEndpts corrected: based on first row of endpts - both inputs should have the same first row
fixendpts <- function(endpts,rotEndpts){
temp <- matrix(ncol=3,nrow=2)
if(normVec(endpts[1,]) != normVec(rotEndpts[1,])){
temp[1,] <- rotEndpts[2,]
temp[2,] <- rotEndpts[1,]
}
else{
temp <- endpts
}
return(temp)
}
#flip the rotated endpts if needed
{
TMD1Rotendpts <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendpts <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendpts <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendpts <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendpts <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendpts <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendpts <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendpts <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendpts <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendpts <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendpts <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendpts <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
View(outputRot)
View(lacyTMD10Rot)
View(TMD2Rotendpts)
#endpts is the non rotated 2x3 matrix of endpts
#rotEndpts is the 2x3 matrix of endpts from rotateFromTo function
#returns the rotEndpts corrected: based on first row of endpts - both inputs should have the same first row
fixendpts <- function(endpts,rotEndpts){
temp <- matrix(ncol=3,nrow=2)
if(normVec(endpts[1,]) != normVec(rotEndpts[1,])){
temp[1,] <- rotEndpts[2,]
temp[2,] <- rotEndpts[1,]
}
#else{
temp <- endpts
}
return(temp)
}
fixendpts <- function(endpts,rotEndpts){
temp <- matrix(ncol=3,nrow=2)
if(normVec(endpts[1,]) != normVec(rotEndpts[1,])){
temp[1,] <- rotEndpts[2,]
temp[2,] <- rotEndpts[1,]
}
#else{
#  temp <- endpts
#}
return(temp)
}
#flip the rotated endpts if needed
{
TMD1Rotendpts <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendpts <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendpts <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendpts <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendpts <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendpts <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendpts <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendpts <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendpts <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendpts <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendpts <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendpts <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
fixendpts <- function(endpts,rotEndpts){
temp <- matrix(ncol=3,nrow=2)
if(normVec(endpts[1,]) != normVec(rotEndpts[1,])){
temp[1,] <- rotEndpts[2,]
temp[2,] <- rotEndpts[1,]
}
else{
temp <- endpts
}
return(temp)
}
TMD1Rotendpts <- fixendpts(TMD1endpts,TMD1Rotendpts)
{
TMD1endpts <-fitLine(lacyTMD1)
TMD2endpts <-fitLine(lacyTMD2)
TMD3endpts <-fitLine(lacyTMD3)
TMD4endpts <-fitLine(lacyTMD4)
TMD5endpts <-fitLine(lacyTMD5)
TMD6endpts <-fitLine(lacyTMD6)
TMD7endpts <-fitLine(lacyTMD7)
TMD8endpts <-fitLine(lacyTMD8)
TMD9endpts <-fitLine(lacyTMD9)
TMD10endpts <-fitLine(lacyTMD10)
TMD11endpts <-fitLine(lacyTMD11)
TMD12endpts <-fitLine(lacyTMD12)
}
{
TMD1endpts <- reorientTMDendpts(TMD1endpts,1,tmdDomainNum,lacyAtoms)
TMD2endpts <- reorientTMDendpts(TMD2endpts,2,tmdDomainNum,lacyAtoms)
TMD3endpts <- reorientTMDendpts(TMD3endpts,3,tmdDomainNum,lacyAtoms)
TMD4endpts <- reorientTMDendpts(TMD4endpts,4,tmdDomainNum,lacyAtoms)
TMD5endpts <- reorientTMDendpts(TMD5endpts,5,tmdDomainNum,lacyAtoms)
TMD6endpts <- reorientTMDendpts(TMD6endpts,6,tmdDomainNum,lacyAtoms)
TMD7endpts <- reorientTMDendpts(TMD7endpts,7,tmdDomainNum,lacyAtoms)
TMD8endpts <- reorientTMDendpts(TMD8endpts,8,tmdDomainNum,lacyAtoms)
TMD9endpts <- reorientTMDendpts(TMD9endpts,9,tmdDomainNum,lacyAtoms)
TMD10endpts <- reorientTMDendpts(TMD10endpts,10,tmdDomainNum,lacyAtoms)
TMD11endpts <- reorientTMDendpts(TMD11endpts,11,tmdDomainNum,lacyAtoms)
TMD12endpts <- reorientTMDendpts(TMD12endpts,12,tmdDomainNum,lacyAtoms)
}
{
lacyTMD1Rot <- rotateFromTo(lacyTMD1,lacyTMD7)
lacyTMD2Rot <- rotateFromTo(lacyTMD2,lacyTMD8)
lacyTMD3Rot <- rotateFromTo(lacyTMD3,lacyTMD9)
lacyTMD4Rot <- rotateFromTo(lacyTMD4,lacyTMD10)
lacyTMD5Rot <- rotateFromTo(lacyTMD5,lacyTMD11)
lacyTMD6Rot <- rotateFromTo(lacyTMD6,lacyTMD12)
lacyTMD7Rot <- rotateFromTo(lacyTMD7,lacyTMD1)
lacyTMD8Rot <- rotateFromTo(lacyTMD8,lacyTMD2)
lacyTMD9Rot <- rotateFromTo(lacyTMD9,lacyTMD3)
lacyTMD10Rot <- rotateFromTo(lacyTMD10,lacyTMD4)
lacyTMD11Rot <- rotateFromTo(lacyTMD11,lacyTMD5)
lacyTMD12Rot <- rotateFromTo(lacyTMD12,lacyTMD6)
}
{
TMD1Rotendpts <- fitLine(lacyTMD1Rot)
TMD2Rotendpts <- fitLine(lacyTMD2Rot)
TMD3Rotendpts <- fitLine(lacyTMD3Rot)
TMD4Rotendpts <- fitLine(lacyTMD4Rot)
TMD5Rotendpts <- fitLine(lacyTMD5Rot)
TMD6Rotendpts <- fitLine(lacyTMD6Rot)
TMD7Rotendpts <- fitLine(lacyTMD7Rot)
TMD8Rotendpts <- fitLine(lacyTMD8Rot)
TMD9Rotendpts <- fitLine(lacyTMD9Rot)
TMD10Rotendpts <- fitLine(lacyTMD10Rot)
TMD11Rotendpts <- fitLine(lacyTMD11Rot)
TMD12Rotendpts <- fitLine(lacyTMD12Rot)
}
{
TMD1Rotendpts <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendpts <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendpts <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendpts <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendpts <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendpts <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendpts <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendpts <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendpts <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendpts <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendpts <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendpts <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
#rotated data
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendpts",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendpts",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
normVec(TMD1endpts[1,]) != normVec(TMD1Rotendpts)
{
TMD1endpts <-fitLine(lacyTMD1)
TMD2endpts <-fitLine(lacyTMD2)
TMD3endpts <-fitLine(lacyTMD3)
TMD4endpts <-fitLine(lacyTMD4)
TMD5endpts <-fitLine(lacyTMD5)
TMD6endpts <-fitLine(lacyTMD6)
TMD7endpts <-fitLine(lacyTMD7)
TMD8endpts <-fitLine(lacyTMD8)
TMD9endpts <-fitLine(lacyTMD9)
TMD10endpts <-fitLine(lacyTMD10)
TMD11endpts <-fitLine(lacyTMD11)
TMD12endpts <-fitLine(lacyTMD12)
}
{
TMD1endpts <- reorientTMDendpts(TMD1endpts,1,tmdDomainNum,lacyAtoms)
TMD2endpts <- reorientTMDendpts(TMD2endpts,2,tmdDomainNum,lacyAtoms)
TMD3endpts <- reorientTMDendpts(TMD3endpts,3,tmdDomainNum,lacyAtoms)
TMD4endpts <- reorientTMDendpts(TMD4endpts,4,tmdDomainNum,lacyAtoms)
TMD5endpts <- reorientTMDendpts(TMD5endpts,5,tmdDomainNum,lacyAtoms)
TMD6endpts <- reorientTMDendpts(TMD6endpts,6,tmdDomainNum,lacyAtoms)
TMD7endpts <- reorientTMDendpts(TMD7endpts,7,tmdDomainNum,lacyAtoms)
TMD8endpts <- reorientTMDendpts(TMD8endpts,8,tmdDomainNum,lacyAtoms)
TMD9endpts <- reorientTMDendpts(TMD9endpts,9,tmdDomainNum,lacyAtoms)
TMD10endpts <- reorientTMDendpts(TMD10endpts,10,tmdDomainNum,lacyAtoms)
TMD11endpts <- reorientTMDendpts(TMD11endpts,11,tmdDomainNum,lacyAtoms)
TMD12endpts <- reorientTMDendpts(TMD12endpts,12,tmdDomainNum,lacyAtoms)
}
{
TMD1Rotendpts <- fitLine(lacyTMD1Rot)
TMD2Rotendpts <- fitLine(lacyTMD2Rot)
TMD3Rotendpts <- fitLine(lacyTMD3Rot)
TMD4Rotendpts <- fitLine(lacyTMD4Rot)
TMD5Rotendpts <- fitLine(lacyTMD5Rot)
TMD6Rotendpts <- fitLine(lacyTMD6Rot)
TMD7Rotendpts <- fitLine(lacyTMD7Rot)
TMD8Rotendpts <- fitLine(lacyTMD8Rot)
TMD9Rotendpts <- fitLine(lacyTMD9Rot)
TMD10Rotendpts <- fitLine(lacyTMD10Rot)
TMD11Rotendpts <- fitLine(lacyTMD11Rot)
TMD12Rotendpts <- fitLine(lacyTMD12Rot)
}
normVec(TMD1endpts[1,]) != normVec(TMD1Rotendpts)
normVec(TMD1endpts[1,])
normVec(TMD1Rotendpts[1,])
normVec(TMD2endpts[1,]) != normVec(TMD2Rotendpts)
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
fix(fixendpts)
#flip the rotated endpts if needed
{
TMD1Rotendptst <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendptst <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendptst <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendptst <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendptst <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendptst <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendptst <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendptst <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendptst <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendptst <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendptst <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendptst <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
#rotated data
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendptst",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendptst",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
#flip the rotated endpts if needed
{
TMD1Rotendptst <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendptst <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendptst <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendptst <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendptst <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendptst <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendptst <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendptst <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendptst <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendptst <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendptst <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendptst <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
#rotated data
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendptst",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendptst",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
#flip the rotated endpts if needed
{
TMD1Rotendptst <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendptst <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendptst <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendptst <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendptst <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendptst <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendptst <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendptst <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendptst <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendptst <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendptst <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendptst <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
#rotated data
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendptst",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendptst",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
source('~/Documents/School Work/Grad School/Spring 2013/Research/R models/transporterModel.r')
{
TMD1Rotendptst <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendptst <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendptst <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendptst <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendptst <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendptst <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendptst <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendptst <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendptst <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendptst <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendptst <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendptst <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendptst",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendptst",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
#flip the rotated endpts if needed
{
TMD1Rotendpts <- fixendpts(TMD1endpts,TMD1Rotendpts)
TMD2Rotendpts <- fixendpts(TMD2endpts,TMD2Rotendpts)
TMD3Rotendpts <- fixendpts(TMD3endpts,TMD3Rotendpts)
TMD4Rotendpts <- fixendpts(TMD4endpts,TMD4Rotendpts)
TMD5Rotendpts <- fixendpts(TMD5endpts,TMD5Rotendpts)
TMD6Rotendpts <- fixendpts(TMD6endpts,TMD6Rotendpts)
TMD7Rotendpts <- fixendpts(TMD7endpts,TMD7Rotendpts)
TMD8Rotendpts <- fixendpts(TMD8endpts,TMD8Rotendpts)
TMD9Rotendpts <- fixendpts(TMD9endpts,TMD9Rotendpts)
TMD10Rotendpts <- fixendpts(TMD10endpts,TMD10Rotendpts)
TMD11Rotendpts <- fixendpts(TMD11endpts,TMD11Rotendpts)
TMD12Rotendpts <- fixendpts(TMD12endpts,TMD12Rotendpts)
}
outputRot <- matrix(nrow=12,ncol=2)
for(i in 1:12){
first <- get(paste("TMD",i,"Rotendpts",sep=""))[1,]
last <- get(paste("TMD",i,"Rotendpts",sep=""))[2,]
outputRot[i,1] <- normVec(first)
outputRot[i,2] <- normVec(last)
}
View(outputRot)
